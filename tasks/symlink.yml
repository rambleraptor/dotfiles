# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

vars:
  DOTFILES_DIR: "{{.ROOT_DIR}}"
  # Get FORCE from environment or default to false
  FORCE: '{{env "FORCE"}}'

tasks:
  link_dotfile:
    internal: true
    silent: true
    vars:
      SRC: "{{.SRC}}"
      DEST: "{{.DEST}}"
    cmds:
      - |
        SRC_PATH="{{.DOTFILES_DIR}}/{{.SRC}}"
        DEST_PATH="{{.DEST}}"

        # Create parent directory if it doesn't exist
        mkdir -p "$(dirname "$DEST_PATH")"

        # If FORCE is true, remove the target
        if [ "{{.FORCE}}" = "true" ]; then
          rm -rf "$DEST_PATH"
        fi

        if [ -L "$DEST_PATH" ]; then
          current=$(readlink "$DEST_PATH")

          # Check if it's a broken symlink
          if [ ! -e "$current" ]; then
            echo "$DEST_PATH is a broken symlink, replacing it"
            rm "$DEST_PATH"
            ln -s "$SRC_PATH" "$DEST_PATH"
          elif [ "$current" != "$SRC_PATH" ]; then
            echo "$DEST_PATH already exists and is symlinked to $current"
          fi
        elif [ -e "$DEST_PATH" ]; then
          echo "$DEST_PATH already exists and is not a symlink"
        else
          echo "creating link for $DEST_PATH"
          ln -s "$SRC_PATH" "$DEST_PATH"
        fi

  install:
    desc: Install dotfiles
    summary: |
      Install dotfiles

      This task will install and configure all dotfiles.

    vars:
      DOTFILES:
        - "tmux.conf.symlink|$HOME/.tmux.conf"
        - "zshrc.symlink|$HOME/.zshrc"
        - "vimrc.symlink|$HOME/.vimrc"
        - "starship.symlink|$HOME/.starship/"

    cmds:
      - for:
          var: DOTFILES
          as: DOTFILE
        task: link_dotfile
        vars:
          SRC: '{{splitList "|" .DOTFILE | first}}'
          DEST: '{{splitList "|" .DOTFILE | last}}'
